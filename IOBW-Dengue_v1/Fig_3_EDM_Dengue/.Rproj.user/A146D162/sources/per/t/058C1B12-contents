---
title: "Step 3: Convergent Cross-Mapping"   
output: html_document
---

Normalize the variables before performing EDM analyses.
Only use the six variables: incidence, temp, rain, rh, svpd, iobw
```{r}
data_obs.null <-  data_country_obs_null[-1]

mul_drivers <- c("ir","t2m","tp","rh","svpd","iobw")
```

### Multiview Embedding

Step1. Mul CCM using the actual data.
```{r}
vars_num <- length(unique(mul_drivers))
# library size
lib_num <- c(1,NROW(data_country.norm))

#lag
E_num <- 4

Mul_obs_country <- data.frame()

for (D_num in 1:(vars_num)) {
  Mview <- Multiview(dataFrame = data_obs.null,
                     lib = lib_num, pred = lib_num, 
                     E = E_num, D = D_num, multiview = ncol(combn(vars_num*E_num, D_num)),
                     columns = mul_drivers, target = "ir",
                     trainLib = TRUE, parameterList = TRUE, numThreads = used_cores,
                     excludeTarget = FALSE, showPlot = FALSE) 

  Mul_view <- Mview[["View"]] %>%
  mutate(
    var_col = pmap(select(., starts_with("name_")), ~ paste(gsub("\\(.*", "", c(...)), collapse = ", "))
  ) %>%
    filter_at(vars(starts_with("name_")), any_vars(grepl("ir\\(t-1\\)", .))) %>%
    filter_at(vars(starts_with("name_")), 
            all_vars(!grepl("ir\\(t-0\\)|ir\\(t-2\\)|ir\\(t-3\\)", .))) %>% 
    arrange(across(starts_with("Col_")))
  

duplicates <- Mul_view %>%
  select(starts_with("name_")) %>%
  rowwise() %>%
  mutate(same_prefix = any(duplicated(gsub("\\(.*", "", c_across(everything())))))

  Mul_view$same_prefix <- duplicates$same_prefix

 Mul_rho_max <- Mul_view %>%
    filter(!same_prefix) %>%
    select(-same_prefix) %>%
    group_by(var_col) %>%
    filter(rho == max(rho)) %>%
    mutate(
      var_col = as.character(var_col),
      var_num = D_num,
      country=country_name
    )


  Mul_obs_country <- rbind(Mul_obs_country, Mul_rho_max)
}

Mul_obs_country  <- Mul_obs_country %>% select(var_num, var_col, rho, MAE, RMSE, country, everything())

Mul_ccm_obs <- rbind(Mul_ccm_obs, Mul_obs_country)

```

Step2. Mul CCM using the ebisuzaki null data.
```{r}

Mul_ebi_all <- c()

for (num in 1:sur_num) {

  data_null.lag <- data_obs.null[, c("time_id", "ir", paste0("iobw_ebi.", num))]

  for (i in 0:(E_num-1)) {
    suffix <- ifelse(i == 0, "(t-0)", paste("(t-", i, ")", sep = ""))
    data_null.lag[paste0("ir", suffix)] <- dplyr::lag(data_null.lag$ir, i, default = NA)
    for (col in c("iobw")) {
      for (j in num) {
        col_name <- paste0(col, "_ebi.", j)
        data_null.lag[paste0(col, suffix)] <- dplyr::lag(data_null.lag[col_name], i, default = NA)
      }
    }
    }
  

  data_null.lag <- data_null.lag[, !grepl("_ebi", names(data_null.lag))]
  

  n_rows <- nrow(Mul_obs_country)
  Mul_ebi <- c()
  for (row_id in 1:n_rows) {
    drive_col <- unlist(Mul_obs_country[row_id, grepl("name_", names(Mul_obs_country))])
    drive_col <- drive_col[!is.na(drive_col)]
    
    pred <- block_lnlp(
      data_null.lag, 
      target_column = "ir", columns = drive_col,
      first_column_time = TRUE, stats_only = FALSE)
    
    Mul_ebi_row <- pred[["stats"]]
    Mul_ebi <- rbind(Mul_ebi, Mul_ebi_row)
  }
  
  Mul_ebi_all <- rbind(Mul_ebi_all, Mul_ebi)
}

Mul_ebi_all$var_col <- gsub("\\([^)]+\\)", "", Mul_ebi_all$cols)

Mul_ebi_all$var_col <- gsub("^\\s+|\\s+$", "", Mul_ebi_all$var_col)

Mul_ebi_all$var_col <- gsub(" ", ", ", Mul_ebi_all$var_col)

Mul_ebi_all <- Mul_ebi_all[, c("var_col", names(Mul_ebi_all)[1:ncol(Mul_ebi_all)-1])] %>%
  mutate(country = country_name)

Mul_ccm_ebi<- rbind(Mul_ccm_ebi, Mul_ebi_all)

```

Step3. Mul CCM using the seasonal null data.
```{r}
Mul_sea_all <- c()

for (num in 1:sur_num) {

  data_null.lag <- data_obs.null[, c("time_id", "ir", paste0("iobw_sea.", num))]
  
  for (i in 0:(E_num-1)) {
    suffix <- ifelse(i == 0, "(t-0)", paste("(t-", i, ")", sep = ""))
    data_null.lag[paste0("ir", suffix)] <- dplyr::lag(data_null.lag$ir, i, default = NA)
    for (col in c("iobw")) {
      for (j in num) {
        col_name <- paste0(col, "_sea.", j)
        data_null.lag[paste0(col, suffix)] <- dplyr::lag(data_null.lag[col_name], i, default = NA)
      }
    }
    }
  
  data_null.lag <- data_null.lag[, !grepl("_sea", names(data_null.lag))]
  
  n_rows <- nrow(Mul_obs_country)
  Mul_sea <- c()
  for (row_id in 1:n_rows) {
    drive_col <- unlist(Mul_obs_country[row_id, grepl("name_", names(Mul_obs_country))])
    drive_col <- drive_col[!is.na(drive_col)]
    
    pred <- block_lnlp(
      data_null.lag, 
      target_column = "ir", columns = drive_col,
      first_column_time = TRUE, stats_only = FALSE)
    
    Mul_sea_row <- pred[["stats"]]
    Mul_sea <- rbind(Mul_sea, Mul_sea_row)
  }
  
  Mul_sea_all <- rbind(Mul_sea_all, Mul_sea)
}

Mul_sea_all$var_col <- gsub("\\([^)]+\\)", "", Mul_sea_all$cols)

Mul_sea_all$var_col <- gsub("^\\s+|\\s+$", "", Mul_sea_all$var_col)

Mul_sea_all$var_col <- gsub(" ", ", ", Mul_sea_all$var_col)

Mul_sea_all <- Mul_sea_all[, c("var_col", names(Mul_sea_all)[1:ncol(Mul_sea_all)-1])] %>%
  mutate(country = country_name)

Mul_ccm_sea<- rbind(Mul_ccm_sea, Mul_sea_all)

```